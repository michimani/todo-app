openapi: '3.0.0'
info:
  title: 'todo-app API'
  description: 'REST API of todo-app'
  version: '0.1.0'
servers:
  - url: 'https://<rest-api-id>.execute-api.<region>.amazonaws.com/api/'
paths:
  /todos:
    post:
      summary: 'add a todo'
      description: 'Add a todo.'
      parameters:
        - name: title
          in: body
          description: 'Title for new todo.'
          required: true
          schema:
            type: string
            example: 'Buy a ticket'
        - name: content
          in: body
          description: 'Content (description, detail...) for a new todo.'
          required: false
          schema:
            type: string
            example: 'This ticket costs $50.'
      responses:
        '200':
          description: success
    get:
      summary: 'get some todos'
      description: 'Get all todos, or some of them by using query parameters.'
      parameters:
        - name: done
          in: query
          description: 'Whether the todo has been done. `0` means not done, `1` means done.'
          required: false
          schema:
            type: string
            example: '0'
        - name: target
          in: query
          description: 'Target property for searching. `title`, `content`, or `both`. This parameter works with `keyword` parameter.'
          required: false
          schema:
            type: string
            default: 'both'
        - name: keyword
          in: query
          description: 'Part or all of the title, content or both of them that match some todos.'
          required: false
          schema:
            type: string
            example: 'ticket'
      responses:
        '200':
          description: 'OK'
          content:
            application/json; charset=utf8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoItem'


  /todos/{todo_id}:
    get:
      summary: 'get a todo'
      description: 'Get a todo by todo ID'
      parameters:
        - $ref: '#/components/parameters/todo_id'
      responses:
        '200':
          description: 'OK'
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TodoItem'
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Server Error'
    delete:
      summary: 'delete a todo'
      description: 'Delete a todo by todo ID'
      parameters:
        - $ref: '#/components/parameters/todo_id'
      responses:
        '200':
          description: 'OK'

components:
  securitySchemes:
    api_key:
      type: 'apiKey'
      name: 'x-api-key'
      in: 'header'
  parameters:
    todo_id:
      name: todo_id
      in: path
      description: 'ID of a todo.'
      required: true
      schema:
        type: string
        example: '1234567890'
  schemas:
    TodoItem:
      type: object
      description: 'a todo'
      properties:
        todo_id:
          type: string
          description: 'Todo ID'
          example: '1234567890'
        title:
          type: string
          description: 'Todo title'
          example: 'Buy a ticket'
        content:
          type: string
          description: 'Todo content, description'
          example: 'This ticket costs $50.'
        done:
          type: number
          description: 'Flag of done. "0" means not done, "1" means done.'
          example: '0'
